{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};const API_URL=process.env.REACT_APP_EMAIL_API_URL||'http://localhost:5000/api';export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[userProfile,setUserProfile]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(null);// Initialize auth state from localStorage\nuseEffect(()=>{const initAuth=async()=>{try{const savedToken=localStorage.getItem('authToken');if(savedToken){setToken(savedToken);await loadUserProfile(savedToken);}}catch(error){console.error('Error initializing auth:',error);localStorage.removeItem('authToken');}finally{setLoading(false);}};initAuth();},[]);// Load user profile with token\nconst loadUserProfile=async authToken=>{try{const response=await fetch(\"\".concat(API_URL,\"/profile\"),{headers:{'Authorization':\"Bearer \".concat(authToken),'Content-Type':'application/json'}});if(response.ok){const data=await response.json();setCurrentUser(data.user);setUserProfile(data.user.profile);return true;}else{throw new Error('Failed to load profile');}}catch(error){console.error('Error loading profile:',error);localStorage.removeItem('authToken');setToken(null);setCurrentUser(null);setUserProfile(null);return false;}};// Send OTP via email\nconst sendOTP=async email=>{try{const response=await fetch(\"\".concat(API_URL,\"/send-otp\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email})});if(!response.ok){const error=await response.json();throw new Error(error.message||'Failed to send OTP');}const result=await response.json();return result;}catch(error){console.error('Error sending OTP:',error);throw error;}};// Verify OTP and login user\nconst verifyOTP=async(email,otp)=>{try{const response=await fetch(\"\".concat(API_URL,\"/verify-otp\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,otp})});if(!response.ok){const error=await response.json();throw new Error(error.message||'Failed to verify OTP');}const result=await response.json();if(result.success&&result.token){// Save token and user data\nlocalStorage.setItem('authToken',result.token);setToken(result.token);setCurrentUser(result.user);setUserProfile(result.user.profile);console.log('User logged in successfully:',result.user.email);return result;}else{throw new Error(result.message||'Login failed');}}catch(error){console.error('Error verifying OTP:',error);throw error;}};// Logout function\nconst logout=async()=>{try{if(token){// Optional: Call logout endpoint\nawait fetch(\"\".concat(API_URL,\"/logout\"),{method:'POST',headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'}});}}catch(error){console.error('Error during logout:',error);}finally{// Clear local state\nlocalStorage.removeItem('authToken');setToken(null);setCurrentUser(null);setUserProfile(null);}};// Update user profile\nconst updateUserProfile=async profileData=>{try{if(!token){throw new Error('Not authenticated');}const response=await fetch(\"\".concat(API_URL,\"/profile\"),{method:'PUT',headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'},body:JSON.stringify({profile:profileData})});if(!response.ok){const error=await response.json();throw new Error(error.message||'Failed to update profile');}const result=await response.json();setCurrentUser(result.user);setUserProfile(result.user.profile);return result;}catch(error){console.error('Error updating profile:',error);throw error;}};// Check if user has profile\nconst hasProfile=()=>{return userProfile&&Object.keys(userProfile).length>0&&userProfile.name;};const value={currentUser,userProfile,token,sendOTP,verifyOTP,logout,updateUserProfile,hasProfile,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","API_URL","process","env","REACT_APP_EMAIL_API_URL","AuthProvider","_ref","children","currentUser","setCurrentUser","userProfile","setUserProfile","loading","setLoading","token","setToken","initAuth","savedToken","localStorage","getItem","loadUserProfile","error","console","removeItem","authToken","response","fetch","concat","headers","ok","data","json","user","profile","sendOTP","email","method","body","JSON","stringify","message","result","verifyOTP","otp","success","setItem","log","logout","updateUserProfile","profileData","hasProfile","Object","keys","length","name","value","Provider"],"sources":["C:/Users/prave/Documents/GitHub/Smart-Sarkari-Sathi/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nconst API_URL = process.env.REACT_APP_EMAIL_API_URL || 'http://localhost:5000/api';\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(null);\r\n\r\n  // Initialize auth state from localStorage\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      try {\r\n        const savedToken = localStorage.getItem('authToken');\r\n        if (savedToken) {\r\n          setToken(savedToken);\r\n          await loadUserProfile(savedToken);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing auth:', error);\r\n        localStorage.removeItem('authToken');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  // Load user profile with token\r\n  const loadUserProfile = async (authToken) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/profile`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${authToken}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCurrentUser(data.user);\r\n        setUserProfile(data.user.profile);\r\n        return true;\r\n      } else {\r\n        throw new Error('Failed to load profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading profile:', error);\r\n      localStorage.removeItem('authToken');\r\n      setToken(null);\r\n      setCurrentUser(null);\r\n      setUserProfile(null);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Send OTP via email\r\n  const sendOTP = async (email) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/send-otp`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Failed to send OTP');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error sending OTP:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Verify OTP and login user\r\n  const verifyOTP = async (email, otp) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/verify-otp`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, otp }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Failed to verify OTP');\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success && result.token) {\r\n        // Save token and user data\r\n        localStorage.setItem('authToken', result.token);\r\n        setToken(result.token);\r\n        setCurrentUser(result.user);\r\n        setUserProfile(result.user.profile);\r\n        \r\n        console.log('User logged in successfully:', result.user.email);\r\n        return result;\r\n      } else {\r\n        throw new Error(result.message || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      if (token) {\r\n        // Optional: Call logout endpoint\r\n        await fetch(`${API_URL}/logout`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during logout:', error);\r\n    } finally {\r\n      // Clear local state\r\n      localStorage.removeItem('authToken');\r\n      setToken(null);\r\n      setCurrentUser(null);\r\n      setUserProfile(null);\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateUserProfile = async (profileData) => {\r\n    try {\r\n      if (!token) {\r\n        throw new Error('Not authenticated');\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/profile`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ profile: profileData })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Failed to update profile');\r\n      }\r\n\r\n      const result = await response.json();\r\n      setCurrentUser(result.user);\r\n      setUserProfile(result.user.profile);\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Check if user has profile\r\n  const hasProfile = () => {\r\n    return userProfile && Object.keys(userProfile).length > 0 && userProfile.name;\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    userProfile,\r\n    token,\r\n    sendOTP,\r\n    verifyOTP,\r\n    logout,\r\n    updateUserProfile,\r\n    hasProfile,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}