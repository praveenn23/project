{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prave\\\\Desktop\\\\very heavy\\\\src\\\\components\\\\DebugInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DebugInfo = () => {\n  _s();\n  const [apiUrl, setApiUrl] = useState('');\n  const [backendStatus, setBackendStatus] = useState('checking...');\n  useEffect(() => {\n    setApiUrl(process.env.REACT_APP_API_URL || 'Not set');\n\n    // Test backend connection\n    const testBackend = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/health`);\n        if (response.ok) {\n          setBackendStatus('✅ Connected');\n        } else {\n          setBackendStatus(`❌ Error: ${response.status}`);\n        }\n      } catch (error) {\n        setBackendStatus(`❌ Failed: ${error.message}`);\n      }\n    };\n    testBackend();\n  }, []);\n\n  // Only show in development\n  if (process.env.NODE_ENV !== 'development') {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '10px',\n      left: '10px',\n      background: 'rgba(0,0,0,0.8)',\n      color: 'white',\n      padding: '10px',\n      borderRadius: '5px',\n      fontSize: '12px',\n      zIndex: 9999\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Debug Info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"API URL: \", apiUrl]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Backend: \", backendStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(DebugInfo, \"0VhcpehPFoL3AdAH0s23O/jFEwM=\");\n_c = DebugInfo;\nexport default DebugInfo;\nvar _c;\n$RefreshReg$(_c, \"DebugInfo\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DebugInfo","_s","apiUrl","setApiUrl","backendStatus","setBackendStatus","process","env","REACT_APP_API_URL","testBackend","response","fetch","ok","status","error","message","NODE_ENV","style","position","bottom","left","background","color","padding","borderRadius","fontSize","zIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prave/Desktop/very heavy/src/components/DebugInfo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst DebugInfo = () => {\r\n  const [apiUrl, setApiUrl] = useState('');\r\n  const [backendStatus, setBackendStatus] = useState('checking...');\r\n\r\n  useEffect(() => {\r\n    setApiUrl(process.env.REACT_APP_API_URL || 'Not set');\r\n    \r\n    // Test backend connection\r\n    const testBackend = async () => {\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/health`);\r\n        if (response.ok) {\r\n          setBackendStatus('✅ Connected');\r\n        } else {\r\n          setBackendStatus(`❌ Error: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        setBackendStatus(`❌ Failed: ${error.message}`);\r\n      }\r\n    };\r\n\r\n    testBackend();\r\n  }, []);\r\n\r\n  // Only show in development\r\n  if (process.env.NODE_ENV !== 'development') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      bottom: '10px',\r\n      left: '10px',\r\n      background: 'rgba(0,0,0,0.8)',\r\n      color: 'white',\r\n      padding: '10px',\r\n      borderRadius: '5px',\r\n      fontSize: '12px',\r\n      zIndex: 9999\r\n    }}>\r\n      <div><strong>Debug Info:</strong></div>\r\n      <div>API URL: {apiUrl}</div>\r\n      <div>Backend: {backendStatus}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DebugInfo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,aAAa,CAAC;EAEjED,SAAS,CAAC,MAAM;IACdO,SAAS,CAACG,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,SAAS,CAAC;;IAErD;IACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,CAACC,GAAG,CAACC,iBAAiB,aAAa,CAAC;QAC3E,IAAIE,QAAQ,CAACE,EAAE,EAAE;UACfP,gBAAgB,CAAC,aAAa,CAAC;QACjC,CAAC,MAAM;UACLA,gBAAgB,CAAC,YAAYK,QAAQ,CAACG,MAAM,EAAE,CAAC;QACjD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdT,gBAAgB,CAAC,aAAaS,KAAK,CAACC,OAAO,EAAE,CAAC;MAChD;IACF,CAAC;IAEDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIH,OAAO,CAACC,GAAG,CAACS,QAAQ,KAAK,aAAa,EAAE;IAC1C,OAAO,IAAI;EACb;EAEA,oBACEjB,OAAA;IAAKkB,KAAK,EAAE;MACVC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,MAAM;MACZC,UAAU,EAAE,iBAAiB;MAC7BC,KAAK,EAAE,OAAO;MACdC,OAAO,EAAE,MAAM;MACfC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE,MAAM;MAChBC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,gBACA5B,OAAA;MAAA4B,QAAA,eAAK5B,OAAA;QAAA4B,QAAA,EAAQ;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvChC,OAAA;MAAA4B,QAAA,GAAK,WAAS,EAACzB,MAAM;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5BhC,OAAA;MAAA4B,QAAA,GAAK,WAAS,EAACvB,aAAa;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA9CID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}